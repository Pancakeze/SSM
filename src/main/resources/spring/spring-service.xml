<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
	   http://www.springframework.org/schema/tx/spring-tx.xsd
	   http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd ">


    <!-- 扫描service包下所有使用注解的类型 -->
    <context:component-scan base-package="com.pancake.service"/>

    <context:component-scan base-package="com.pancake.advice"/>

    <!--开启Aspect注解-->
    <aop:aspectj-autoproxy  proxy-target-class="true"/>


    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置基于注解的声明式事务   配合@Transactional 注解使用-->
    <tx:annotation-driven transaction-manager="transactionManager" />




 <!--   <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            &lt;!&ndash;method  对应 业务层的方法名字，，而不是 方法里面调用的 业务的名字   appoint&ndash;&gt;
            <tx:method name="appoint*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
            <tx:method name="create*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
            <tx:method name="add*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
            <tx:method name="upd*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
            <tx:method name="del*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
            <tx:method name="execute*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
            <tx:method name="do*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
            <tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
            <tx:method name="set*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
            <tx:method name="get*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
            <tx:method name="show*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
            <tx:method name="list*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
            <tx:method name="query*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
            <tx:method name="has*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
            <tx:method name="ntx*" propagation="NOT_SUPPORTED"/>
            <tx:method name="*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
        </tx:attributes>
    </tx:advice>


    <aop:config>
        &lt;!&ndash;
            第一个 *  代表返回值类型
            第二个 *  代表所有类
            第三个 *  代表类下的所有方法

            第一个 .. 代表当前包及其子包
            第二个 .. 代表任何参数类型

            .*(..)   代表任何参数类型的方法
        &ndash;&gt;
        <aop:pointcut id="serviceMethod" expression="execution(* com.pancake.service..*.*(..))"/>
        &lt;!&ndash; 将事务增强与切入点组合（织入事务切面） &ndash;&gt;
        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice"/>
    </aop:config>-->





</beans>